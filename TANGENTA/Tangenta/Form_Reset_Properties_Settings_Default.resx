<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAGABoAwAAJgAAACAgAAAAABgAqAwAAI4DAAAoAAAAEAAAACAAAAABABgAAAAAAAAD
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA4eHhAAAA4eHhAAAA4eHhAAAA4eHhAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA4eHhAAAA4eHhAAAA4eHhAAAA4eHhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4eHh
        AAAA4eHh4eHhAAAA4eHhAAAAAAAAAAAAAAAABAQEBAQEAAAAAAAAAAAAAAAA4eHhAAAA4eHhAAAA4eHh
        AAAAAAAAAAAAAAAAAAAABAQEBAQEAAAAAAAAAAAAAAAA4eHhAAAA4eHhAAAA4eHhAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA4eHhAAAAAAAA4eHhAAAAAAAAAAAAAAAAAAAAAAAABAQEBAQEAAAA
        AAAAAAAAAAAA4eHhAAAAAAAA4eHhAAAAAAAAAAAAAAAAAAAAAAAABAQEBAQEAAAAAAAAAAAAAAAA4eHh
        AAAAAAAA4eHhAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEBAQEAAAAAAAAAAAA4eHhAAAAwMDAAAAA4eHh
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEBAQEAAAAAAAA4eHhAAAAwMDAAAAA4eHhAAAAAAAAAAAABAQE
        BAQEAAAAAAAABAQEBAQEAAAAAAAA4eHhAAAAwMDAwMDAAAAA4eHhAAAAAAAABAQEBAQEAAAAAAAABAQE
        BAQEAAAAAAAA4eHhAAAAwMDAwMDAwMDAAAAA4eHhAAAAAAAABAQEBAQEBAQEBAQEAAAAAAAAAAAA4eHh
        AAAAwMDAgICAgICAAAAA4eHhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4eHhAAAAgICA////////
        gICAAAAA4eHhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4eHhAAAAgICA////////gICA4eHhAAAA4eHh
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA4eHhAAAA4eHhgICAgICA4eHhAAAA4eHhAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAiP8AAIj/AACB5wAAg+cAAIP/AACH5wAAh+cAAIfzAACD+QAAg5kAAIGZAACAwwAAgP8AAIB/
        AACAPwAAgT8AACgAAAAgAAAAQAAAAAEAGAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEA
        AAAAAADh4eHh4eEAAAAAAAAAAAAAAAAAAADh4eHh4eHh4eEAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAADh4eHh4eEAAAAAAAAAAAAAAADh
        4eHh4eHh4eEAAAAAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADh4eHh4eEAAAAAAADh4eHh4eEAAAAAAAAAAADh4eHh4eHh4eEAAAAAAADh4eHh4eHh4eEAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAADh4eHh4eEA
        AAAAAADh4eHh4eHh4eEAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAADh4eHh4eEAAADh4eHh4eHh4eEAAAAAAADh4eHh4eEA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEA
        AAAAAADh4eHh4eHh4eHh4eHh4eEAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAADh4eHh4eHh4eHh4eEAAAAAAADh
        4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAADAAAEBAMEBAQAAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADh4eHh4eEAAAAAAADh4eHh4eHh4eEAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
        AAAEBAMEBAQAAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAADh4eHh4eEA
        AAAAAADh4eHh4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAADh4eHh4eEAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEA
        AAAAAADh4eEAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAwMEBAQAAwMA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAADh4eEAAAAAAADh4eHh4eEAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAwMEBAQAAwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADh4eHh4eEAAAAAAAAAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAEAwAEBAQDBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAAAAAAAAAADh
        4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAEBAMEBAQDAwQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAAAAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAEBAQEBAQDBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEA
        AAAAAAAAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAE
        BAMEBAQDBAQAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAAAAAAAAAADh4eHh4eEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAEBAMEBAQAAwQAAAAAAAAAAAAAAAAA
        AAAAAADh4eHh4eEAAAAAAADh4eEAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAADAAAEBAQDBAQAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAADAwMAAAAAA
        AADh4eHh4eEAAAAAAAAAAAAAAAAAAAADAAAEBAMEBAQAAAMAAAAAAAAAAAAAAAAAAAADAAAEBAQDBAQA
        AAMAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAADAwMDAwMAAAAAAAADh4eEAAAAAAAAAAAAAAAAAAAAA
        AAAEAwMEBAQDAwQAAAAAAAAAAAAAAAAAAAAEAwAEBAQDBAQAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEA
        AAAAAADAwMDAwMAAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAAAAADAAAEBAQEBAQDAwQAAAAAAAAAAAAE
        AwAEBAQEBAQAAwQAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAADAwMDAwMDAwMAAAAAAAADh4eHh
        4eEAAAAAAAAAAAAAAAAAAAAEAwAEBAQEBAQEBAQEBAQEBAQEBAQEBAQDAwQAAAAAAAAAAAAAAAAAAAAA
        AAAAAADh4eHh4eEAAAAAAADAwMDAwMDAwMDAwMAAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAAAAADAAAE
        BAMEBAQEBAQEBAQEBAQAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAADAwMDAwMDA
        wMDAwMDAwMAAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAADAwMDAwMCAgICAgICAgICAgIAAAAAAAADh4eHh4eEA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEA
        AAAAAADAwMCAgID///////////////+AgIAAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAACAgID/////////////////////
        //+AgIAAAAAAAADh4eHh4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADh4eHh4eEAAAAAAACAgID///////////////////////+AgIDh4eEAAAAAAAAAAADh4eHh4eEA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAACAgID/////
        //////////////////+AgIDh4eHh4eEAAAAAAADh4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAACAgID///////////////////////+AgIDh4eHh4eHh
        4eHh4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEA
        AAAAAADh4eGAgID///////////////+AgIDh4eHh4eHh4eHh4eHh4eHh4eHh4eEAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHh4eEAAAAAAADh4eHh4eGAgICAgICAgICAgIDh
        4eEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACB8B//geAf/4HAP/+BgP//gQH//4AD//+AB/P/gA/z/4AP//+AH///gD/z/4A/8/+Af/P/gH/5/4B/
        /H+Af/4/gH//P4A//5+APz+fgD8fn4Afjz+AD8A/gAfg/4AD//+AAf//gAD//4AAP/+AAB//gAAf/4AA
        H/+AAB//gA///w==
</value>
  </data>
</root>