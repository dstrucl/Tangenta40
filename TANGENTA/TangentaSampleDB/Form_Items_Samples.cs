using LanguageControl;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace TangentaSampleDB
{
    public partial class Form_Items_Samples : Form
    {
        public bool bAutoGenerateDemoSampleItems = false;
        public int iNumberOfGroupsInLevel1 = 0;
        public int iNumberOfGroupsInLevel2 = 0;
        public int iNumberOfGroupsInLevel3 = 0;
        public int iNumberOfItemsPerGroup = 3;
        private string m_shopName = null;

        NavigationButtons.Navigation nav = null;
        public Form_Items_Samples(NavigationButtons.Navigation xnav,string shopName)
        {
            InitializeComponent();
            this.Name += shopName;
            m_shopName = shopName;
            nav = xnav;
            usrc_NavigationButtons1.Init(nav);
            lng.s_InsertSampleItems_for_shop.Text(this, shopName);
            lng.s_rdb_InsertItemsManualy.Text(rdb_InsertItemsManualy);
            lng.s_rdb_AutoGenerateDemoItems.Text(this.rdb_AutoGenerateDemoItems);
            lng.s_GeneratorOfSampleItems.Text(grp_AutoGenerateSampleItems);
            lng.s_lbl_ItemNamePrefix.Text(this.lbl_ItemPrefix);
            lng.s_lbl_ItemAbbreviationPrefix.Text(this.lbl_ItemAbbreviationPrefix);
            lng.s_lbl_Number_Of_Groups_in_Level1.Text(this.lbl_Number_Of_Groups_in_Level1);
            lng.s_lbl_Number_Of_Groups_in_Level2.Text(this.lbl_Number_Of_Groups_in_Level2);
            lng.s_lbl_Number_Of_Groups_in_Level3.Text(this.lbl_Number_Of_Groups_in_Level3);
            lng.s_lbl_Number_Of_Items_per_group.Text(this.lbl_NumberOfItemsPerGroup);

            if (m_shopName.Equals(lng.s_Shop_B.s))
            {
                this.txt_Item_Name_Prefix.Text = lng.ShopB_Item_Name_Item.s;
                this.txt_ItemAbbreviationPrefix.Text = lng.ShopB_Item_Abbreviation_SB.s;
            }
            else
            {
                this.txt_Item_Name_Prefix.Text = lng.ShopC_Item_Name_Item.s; 
                this.txt_ItemAbbreviationPrefix.Text = lng.ShopC_Item_Abbreviation_SB.s;
            }


            this.nm_UpDn_NumberOfGroupsInLevel1.Value = iNumberOfGroupsInLevel1;
            this.nm_UpDn_NumberOfGroupsInLevel2.Value = iNumberOfGroupsInLevel2;
            this.nm_UpDn_NumberOfGroupsInLevel3.Value = iNumberOfGroupsInLevel3;
            this.nmUpDn_NumberOfItemsPerGroup.Value = iNumberOfItemsPerGroup;
            rdb_InsertItemsManualy.Checked = true;
            this.nm_UpDn_NumberOfGroupsInLevel1.ValueChanged += new System.EventHandler(this.nm_UpDn_NumberOfGroupsInLevel1_ValueChanged);
            this.nm_UpDn_NumberOfGroupsInLevel2.ValueChanged += new System.EventHandler(this.nm_UpDn_NumberOfGroupsInLevel2_ValueChanged);
            this.nm_UpDn_NumberOfGroupsInLevel3.ValueChanged += new System.EventHandler(this.nm_UpDn_NumberOfGroupsInLevel3_ValueChanged);
            this.nmUpDn_NumberOfItemsPerGroup.ValueChanged += new System.EventHandler(this.nmUpDn_NumberOfItemsPerGroup_ValueChanged);
            ShowAllItemsToInsert();
            if (nav.Auto_NEXT)
            {
                this.rdb_AutoGenerateDemoItems.Checked = true;
                this.rdb_InsertItemsManualy.Checked = false;
            }
        }
        public int iNumberOffAll()
        {
            int iAll = 1;
            if (iNumberOfGroupsInLevel3 > 0)
            {
                iAll = (iNumberOfGroupsInLevel3 * iNumberOfGroupsInLevel2 * iNumberOfGroupsInLevel1) * iNumberOfItemsPerGroup
                       + (iNumberOfGroupsInLevel3 * iNumberOfGroupsInLevel2) * iNumberOfItemsPerGroup
                       + iNumberOfGroupsInLevel3 * iNumberOfItemsPerGroup
                       + iNumberOfItemsPerGroup;
            }
            else if (iNumberOfGroupsInLevel2 > 0)
            {
                iAll = (iNumberOfGroupsInLevel2 * iNumberOfGroupsInLevel1) * iNumberOfItemsPerGroup
                       + iNumberOfGroupsInLevel2 * iNumberOfItemsPerGroup
                       + iNumberOfItemsPerGroup;
            }
            else if (iNumberOfGroupsInLevel1 > 0)
            {
                iAll = (iNumberOfGroupsInLevel1) * iNumberOfItemsPerGroup
                       + iNumberOfItemsPerGroup;
            }
            else
            {
                iAll = iNumberOfItemsPerGroup;
            }
            return iAll;
        }

    private void usrc_NavigationButtons1_ButtonPressed(NavigationButtons.Navigation.eEvent evt)
        {
            nav.eExitResult = evt;
            switch (evt)
            {
                case NavigationButtons.Navigation.eEvent.NEXT:
                    iNumberOfGroupsInLevel1 = Convert.ToInt32(nm_UpDn_NumberOfGroupsInLevel1.Value);
                    iNumberOfGroupsInLevel2 = Convert.ToInt32(nm_UpDn_NumberOfGroupsInLevel2.Value);
                    iNumberOfGroupsInLevel3 = Convert.ToInt32(nm_UpDn_NumberOfGroupsInLevel3.Value);
                    iNumberOfItemsPerGroup = Convert.ToInt32(nmUpDn_NumberOfItemsPerGroup.Value);
                    bAutoGenerateDemoSampleItems = rdb_AutoGenerateDemoItems.Checked;
                    if (m_shopName.Equals(lng.s_Shop_B.s))
                    {
                        lng.ShopB_Item_Abbreviation_SB.s = this.txt_ItemAbbreviationPrefix.Text;
                        lng.ShopB_Item_Name_Item.s = this.txt_Item_Name_Prefix.Text;
                    }
                    else
                    {
                        lng.ShopC_Item_Abbreviation_SB.s = this.txt_ItemAbbreviationPrefix.Text;
                        lng.ShopC_Item_Name_Item.s = this.txt_Item_Name_Prefix.Text;
                    }
                    this.Close();
                    DialogResult = DialogResult.OK;

                    break;
                default:
                    this.Close();
                    DialogResult = DialogResult.Cancel;
                    break;
            }
        }

        private void nm_UpDn_NumberOfGroupsInLevel1_ValueChanged(object sender, EventArgs e)
        {
            if (nm_UpDn_NumberOfGroupsInLevel1.Value>0)
            {
                EnableLevel(2);
            }
            else
            {
                DisableLevel(2);
                DisableLevel(3);
            }
            iNumberOfGroupsInLevel1 = Convert.ToInt32(nm_UpDn_NumberOfGroupsInLevel1.Value);
            ShowAllItemsToInsert();
        }

        private void nm_UpDn_NumberOfGroupsInLevel2_ValueChanged(object sender, EventArgs e)
        {
            if (nm_UpDn_NumberOfGroupsInLevel2.Value > 0)
            {
                EnableLevel(3);
            }
            else
            {
                DisableLevel(3);
            }
            iNumberOfGroupsInLevel2 = Convert.ToInt32(nm_UpDn_NumberOfGroupsInLevel2.Value);
            ShowAllItemsToInsert();
        }

        private void DisableLevel(int v)
        {
            switch (v)
            {
                case 2:
                    nm_UpDn_NumberOfGroupsInLevel2.Enabled = false;
                    lbl_Number_Of_Groups_in_Level2.Enabled = false;
                    break;
                case 3:
                    nm_UpDn_NumberOfGroupsInLevel3.Enabled = false;
                    lbl_Number_Of_Groups_in_Level3.Enabled = false;
                    break;
            }

        }

        private void EnableLevel(int v)
        {
            switch (v)
            {
                case 2:
                    nm_UpDn_NumberOfGroupsInLevel2.Enabled = true;
                    lbl_Number_Of_Groups_in_Level2.Enabled = true;
                    break;
                case 3:
                    nm_UpDn_NumberOfGroupsInLevel3.Enabled = true;
                    lbl_Number_Of_Groups_in_Level3.Enabled = true;
                    break;
            }
        }

        private void ShowAllItemsToInsert()
        {
            int iNumberOfAllToBeInserted = iNumberOffAll();
            this.lbl_NumberOfTitemsToBeInserted.Text = lng.s_NumberOfItemsToInsert.s + " = " + iNumberOfAllToBeInserted;
        }
        private void nm_UpDn_NumberOfGroupsInLevel3_ValueChanged(object sender, EventArgs e)
        {
            iNumberOfGroupsInLevel3 = Convert.ToInt32(nm_UpDn_NumberOfGroupsInLevel3.Value);
            ShowAllItemsToInsert();
        }

        private void nmUpDn_NumberOfItemsPerGroup_ValueChanged(object sender, EventArgs e)
        {
            iNumberOfItemsPerGroup = Convert.ToInt32(nmUpDn_NumberOfItemsPerGroup.Value);
            ShowAllItemsToInsert();
        }

        private void Form_Items_Samples_Shown(object sender, EventArgs e)
        {
            if (SampleDB.eType == SampleDB.eSampleType.NONE)
            {
                if (XMessage.Box.Show(this, lng.s_IfYouAreRunningThisApplicationOnlyForDemoOrTestPurposesPressYes, lng.s_Question.s, MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) == DialogResult.Yes)
                {
                    SampleDB.eType = SampleDB.eSampleType.DEMO;
                }
                else
                {
                    SampleDB.eType = SampleDB.eSampleType.REAL;
                }
            }
            switch (SampleDB.eType)
            {
                case SampleDB.eSampleType.DEMO:
                    this.rdb_AutoGenerateDemoItems.Checked = true;
                    break;
                case SampleDB.eSampleType.REAL:
                    this.rdb_InsertItemsManualy.Checked = true;
                    break;
            }
        }
    }
}
